/**
 * ü™ê Cosmic Dashboard ‚Äì Deployment Summary Generator (v6.8.4)
 * Creates an HTML report showing asset stats, optimization, and environment details.
 */

import fs from "fs-extra";
import path from "path";
import crypto from "crypto";
import os from "os";
import chalk from "chalk";
import { fileURLToPath } from "url";
import prettyBytes from "pretty-bytes";

const __dirname = path.dirname(fileURLToPath(import.meta.url));
const rootDir = path.resolve(__dirname, "../");
const publicDir = path.join(rootDir, "public");
const logDir = path.join(rootDir, "logs");
const pkgPath = path.join(rootDir, "package.json");
const versionPath = path.join(publicDir, "version.txt");
fs.ensureDirSync(logDir);

function checksum(filePath) {
  const data = fs.readFileSync(filePath);
  return crypto.createHash("sha256").update(data).digest("hex").slice(0, 10);
}

function listFiles(dir) {
  const files = [];
  fs.readdirSync(dir).forEach((file) => {
    const fullPath = path.join(dir, file);
    const stat = fs.statSync(fullPath);
    if (stat.isDirectory()) files.push(...listFiles(fullPath));
    else files.push(fullPath);
  });
  return files;
}

async function generateSummary() {
  console.log(chalk.cyan("üß† Generating deployment summary..."));

  const pkg = fs.readJSONSync(pkgPath);
  const version = fs.existsSync(versionPath)
    ? fs.readFileSync(versionPath, "utf8").trim()
    : pkg.version;

  const files = listFiles(publicDir);
  const stats = files.map((f) => {
    const size = fs.statSync(f).size;
    return {
      name: path.relative(publicDir, f),
      size,
      checksum: checksum(f),
    };
  });

  const totalSize = stats.reduce((a, b) => a + b.size, 0);
  const date = new Date().toLocaleString();
  const sysInfo = `${os.type()} ${os.release()} (${os.arch()})`;
  const nodeVersion = process.version;

  const html = `
<!DOCTYPE html>
<html lang="en">
<head>
<meta charset="UTF-8">
<meta name="viewport" content="width=device-width, initial-scale=1.0">
<title>Cosmic Dashboard v6.8.4 ‚Äî Deployment Summary</title>
<style>
  body { font-family: "Inter", sans-serif; background: #0d1117; color: #e6edf3; padding: 40px; }
  h1 { color: #58a6ff; font-size: 28px; margin-bottom: 8px; }
  h2 { margin-top: 30px; color: #79c0ff; border-bottom: 1px solid #30363d; padding-bottom: 4px; }
  table { width: 100%; border-collapse: collapse; margin-top: 12px; }
  th, td { border-bottom: 1px solid #30363d; padding: 8px 10px; font-size: 14px; }
  th { background: #161b22; color: #58a6ff; text-align: left; }
  tr:hover { background: #161b22; }
  footer { margin-top: 40px; font-size: 13px; color: #8b949e; text-align: center; }
  .tag { background: #238636; color: #fff; border-radius: 6px; padding: 3px 6px; font-size: 12px; }
  .warning { background: #9e6a03; color: #fff; border-radius: 6px; padding: 3px 6px; font-size: 12px; }
  .version { color: #58a6ff; font-weight: bold; }
</style>
</head>
<body>
  <h1>üöÄ Cosmic Dashboard ‚Äî Deployment Summary</h1>
  <p><b>Version:</b> <span class="version">${version}</span></p>
  <p><b>Date:</b> ${date}</p>
  <p><b>Environment:</b> ${sysInfo}</p>
  <p><b>Node.js:</b> ${nodeVersion}</p>
  <p><b>Total Assets:</b> ${stats.length} files (${prettyBytes(totalSize)})</p>

  <h2>üì¶ Asset Overview</h2>
  <table>
    <thead>
      <tr><th>File</th><th>Size</th><th>Checksum</th></tr>
    </thead>
    <tbody>
      ${stats
        .map(
          (s) =>
            `<tr><td>${s.name}</td><td>${prettyBytes(
              s.size
            )}</td><td>${s.checksum}</td></tr>`
        )
        .join("")}
    </tbody>
  </table>

  <h2>üß© Optimization Flags</h2>
  <ul>
    <li><b>Auto Optimize:</b> ${
      pkg.cosmic?.autoOptimize ? `<span class="tag">Enabled</span>` : `<span class="warning">Disabled</span>`
    }</li>
    <li><b>FPS Adaptive:</b> ${
      pkg.cosmic?.fpsAdaptive ? `<span class="tag">Active</span>` : `<span class="warning">Off</span>`
    }</li>
    <li><b>Mobile Optimized:</b> ${
      pkg.cosmic?.mobileOptimized ? `<span class="tag">Yes</span>` : `<span class="warning">No</span>`
    }</li>
    <li><b>PWA Support:</b> ${
      pkg.cosmic?.pwa ? `<span class="tag">True</span>` : `<span class="warning">False</span>`
    }</li>
  </ul>

  <h2>üåê Platform Support</h2>
  <ul>
    <li><b>Android:</b> Min ${pkg.platformSupport.android.minVersion}, Recommended ${pkg.platformSupport.android.recommended}, FPS ${pkg.platformSupport.android.fpsRange}</li>
    <li><b>iOS:</b> Min ${pkg.platformSupport.ios.minVersion}, Recommended ${pkg.platformSupport.ios.recommended}, FPS ${pkg.platformSupport.ios.fpsRange}</li>
    <li><b>Desktop:</b> ${pkg.platformSupport.desktop.os.join(", ")} ‚Äî FPS ${pkg.platformSupport.desktop.fpsRange}</li>
  </ul>

  <footer>
    Generated by Cosmic Build System v6.8.4 ‚Äî ${date}<br>
    (c) 2025 Cosmic Dashboard Project
  </footer>
</body>
</html>`;

  const outputPath = path.join(logDir, "deploy-summary.html");
  fs.writeFileSync(outputPath, html);
  console.log(chalk.green(`‚úÖ Deployment summary generated: ${outputPath}`));
}

generateSummary();